 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.slangproject;

import java.util.ArrayList;
import java.util.Map;
import java.util.Set;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mwg
 */
public class JavaSwing extends javax.swing.JFrame {

    /**
     * Creates new form JavaSwing
     */
    public JavaSwing() {
        
        initComponents();
        this.ftable();
    }
    
    private void ftable(){
        DefaultTableModel defaultTableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
            
        };
        this.Table.setModel(defaultTableModel);
        
        defaultTableModel.addColumn("Slang");
        defaultTableModel.addColumn("Defitition");
        Map<String, ArrayList<String>> multiMap = Slang.getMultiMap();
        Set<String> set = multiMap.keySet();
        set.forEach((var s) -> {
            defaultTableModel.addRow((new Object[]{s, multiMap.get(s)}));
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        findPopupMenu = new javax.swing.JPopupMenu();
        findSlangMenuItem = new javax.swing.JMenuItem();
        findValueMenuItem = new javax.swing.JMenuItem();
        quizzPopupMenu = new javax.swing.JPopupMenu();
        quizzSlangMenuItem = new javax.swing.JMenuItem();
        valueMenuItem = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        SlangWordLabel = new javax.swing.JLabel();
        findButton = new javax.swing.JButton();
        historyButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        randomButton = new javax.swing.JButton();
        quizzButton = new javax.swing.JButton();

        findSlangMenuItem.setText("Find Slang");
        findSlangMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findSlangMenuItemActionPerformed(evt);
            }
        });
        findPopupMenu.add(findSlangMenuItem);

        findValueMenuItem.setText("Find definition");
        findValueMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findValueMenuItemActionPerformed(evt);
            }
        });
        findPopupMenu.add(findValueMenuItem);

        quizzSlangMenuItem.setText("Slang quizz");
        quizzSlangMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizzSlangMenuItemActionPerformed(evt);
            }
        });
        quizzPopupMenu.add(quizzSlangMenuItem);

        valueMenuItem.setText("Definition quizz");
        valueMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueMenuItemActionPerformed(evt);
            }
        });
        quizzPopupMenu.add(valueMenuItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Slang Words");
        setAlwaysOnTop(true);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Slang", "Key"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(Table);

        SlangWordLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        SlangWordLabel.setText("SLANG WORDS");

        findButton.setText("Find");
        findButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                findButtonMouseClicked(evt);
            }
        });
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        historyButton.setText("History");
        historyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyButtonActionPerformed(evt);
            }
        });

        AddButton.setText("Add SangWord");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit SlangWord");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete SlangWord");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset Slangs");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        randomButton.setText("Random Slang");
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        quizzButton.setText("Quizz");
        quizzButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quizzButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(findButton)
                                    .addComponent(historyButton))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editButton)
                                    .addComponent(AddButton))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteButton)
                                    .addComponent(resetButton)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(randomButton)
                        .addGap(39, 39, 39)
                        .addComponent(quizzButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(SlangWordLabel)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(SlangWordLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findButton)
                    .addComponent(AddButton)
                    .addComponent(deleteButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(historyButton)
                    .addComponent(editButton)
                    .addComponent(resetButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(randomButton)
                    .addComponent(quizzButton))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        new AddSwing().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AddButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        new DeleteSwing().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomButtonActionPerformed
        // TODO add your handling code here:
        Object randomSlang = Slang.random();
        Icon icon = new ImageIcon("icon/random.png");
        JOptionPane.showMessageDialog(this, randomSlang, "Random", JOptionPane.OK_OPTION, icon);
    }//GEN-LAST:event_randomButtonActionPerformed

    private void findButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findButtonMouseClicked
        // TODO add your handling code here:
       findPopupMenu.show(findButton, evt.getX(), evt.getY());
    }//GEN-LAST:event_findButtonMouseClicked

    private void findSlangMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findSlangMenuItemActionPerformed
        // TODO add your handling code here:
        new FindSlangSwing().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_findSlangMenuItemActionPerformed

    private void findValueMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findValueMenuItemActionPerformed
        // TODO add your handling code here:
        FindDefinitionSwing fds = new FindDefinitionSwing();
        fds.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_findValueMenuItemActionPerformed

    private void historyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyButtonActionPerformed
        // TODO add your handling code here:
        new HistorySwing().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_historyButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        new EditSwing().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
       
        Icon icon =  new ImageIcon("icon/undo.png");
       
        int x = JOptionPane.showConfirmDialog(this, "Ban co muon reset?", "Reset slang", JOptionPane.OK_OPTION, 2 ,icon);
            if(x == JOptionPane.YES_OPTION){Slang.readFile();}
        
    }//GEN-LAST:event_resetButtonActionPerformed

    private void quizzButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quizzButtonMouseClicked
        // TODO add your handling code here:
        quizzPopupMenu.show(this.quizzButton, evt.getX(), evt.getY());
    }//GEN-LAST:event_quizzButtonMouseClicked

    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_resetButtonMouseClicked

    private void quizzSlangMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizzSlangMenuItemActionPerformed
        // TODO add your handling code here:
        new SlangQuizzSwing().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_quizzSlangMenuItemActionPerformed

    private void valueMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueMenuItemActionPerformed
        // TODO add your handling code here:
        new DefinitionQuizzSwing().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_valueMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaSwing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JLabel SlangWordLabel;
    private javax.swing.JTable Table;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton findButton;
    private javax.swing.JPopupMenu findPopupMenu;
    private javax.swing.JMenuItem findSlangMenuItem;
    private javax.swing.JMenuItem findValueMenuItem;
    private javax.swing.JButton historyButton;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton quizzButton;
    private javax.swing.JPopupMenu quizzPopupMenu;
    private javax.swing.JMenuItem quizzSlangMenuItem;
    private javax.swing.JButton randomButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JMenuItem valueMenuItem;
    // End of variables declaration//GEN-END:variables
}
